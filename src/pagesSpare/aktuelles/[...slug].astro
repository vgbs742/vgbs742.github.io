---
import Page from '@components/pages_complete/now/slug.astro'
import { getCollection, render } from 'astro:content';
import { getTranslations, getOneLang } from '@/snippets/handleCollections';

export async function getStaticPaths() {
  const pages = await getCollection('now');

  //////////////////////console.log("pages");
  //////////////////////console.log(pages);

  const pagesThisLang = getOneLang(pages, 'de');
  const pagesNoDrafts =  pagesThisLang.filter(pageTL => {
    return pageTL.data.is_draft == false;
  });
  const pagesToMake =  pagesNoDrafts.filter(pageND => {
    return pageND.data.make_page != false;
  });
  const paths = pagesToMake.map(pageTM => {
    const slug = pageTM.data.slug;
    return { params: { slug: slug || undefined }, props: { page, pages } };
  });

  console.log("pagesNoDrafts");
  console.log(pagesNoDrafts);
  console.log("pagesToMake");
  console.log(pagesToMake);
  console.log("paths");
  console.log(paths);
  
  return paths;
}
//////////console.log("Astro.params");
//////////console.log(Astro.params);
const { slug } = Astro.params;
const { page, pages } = Astro.props;
if(page){
  const splitSlug = page.filePath.split('/');
  //////////console.log("splitSlug");
  //////////console.log(splitSlug[splitSlug.length - 2]);
  const lang = splitSlug[splitSlug.length - 2]
  //////////console.log("lang: "+lang);
  //////////console.log("slug: "+slug);
}



---
<Page lang={lang} slug={slug} page={page} pages={pages} />