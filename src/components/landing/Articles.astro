---
import { Image } from 'astro:assets';
import SectionTitle from "@components/snippets/SectionTitle.astro";
import testImg from "../../assets/for_content/img/test.jpeg"; 
// Define the array of projects directly in the frontmatter script.
const things = [
  {
    "url": "https://www.lexingtonthemes.com/",
    "title": "Lexington Themes",
    "description": "Premium themes and UI Kits For designers, developers, businesses, and personal use — Beautifully crafted with Astro.js, and Tailwind CSS — Simple & easy to customize."
  },
  {
    "url": "https://www.oxbowui.com/",
    "title": "Oxbow UI",
    "description": "Free and premium components, elements and layouts Beautifully crafted with Tailwind CSS — Simple & easy to customise."
  },
  {
    "url": "https://www.colorsandfonts.com/",
    "title": "Colors & Fonts",
    "description": "Color and typography resources and inspiration for Web Developers and Digital Designers."
  },
  {
    "url": "https://www.svgdoodles.com/",
    "title": "SVG Doodles",
    "description": "A free collection of 208 super duper SVG doodles for your creative projects."
  }
  // Add more projects as needed...
];

// Function to calculate `data-aos-duration` based on index
function calculateAosDuration(index) {
  return 1500 + index * 500; // Example: Increment duration by 500ms for each project
}
---

<section class="bg-primary">
  <div class="px-8 2xl:max-w-7xl mx-auto py-32">
    <div class="space-y-2">
      <!-- Section Title and Decorative Elements -->
      <SectionTitle thin="Main" thick="projects" linkUrl="www.eee.ch" />
    </div>

    <ul
      class="mx-auto grid grid-cols-1  sm:grid-cols-2 text-secondary md:grid-cols-3 lg:grid-cols-4 items-start gap-6 mt-2 pt-2"
      role="list"
    >
      {
        things.map((thing, index) => (
          <li
            class="flow-root h-full"
            data-aos="fade-up"
            data-aos-duration={calculateAosDuration(index)}
          >
            <div class="h-full">
              <div class="h-full flex flex-col justify-between">
                <div class="grow">
                  <div class="my-2 grid grid-cols-1 grid-rows-1 canvas">
                    <div class="h-40 col-start-1 row-start-1 overflow-clip img" style={"background: url("+testImg.src+");background-size: cover;background-position: center;"}>
                    </div>
                    <div class="h-40 col-start-1 row-start-1 z-10 over"></div>
                  </div>
                  <h3 class="italic text-2xl block font-bold">{thing.title}</h3>
                  <p class="text-base mt-3 leading-relaxed">
                    {thing.description}
                  </p>
                </div>
                <div class="mt-2">
                  <a href={thing.url} class="mt-3 text-base font-semibold">
                    Learn more &nbsp; ↗
                  </a>
                </div>
              </div>
            </div>
          </li>
        ))
      }
    </ul>
  </div>
</section>

<style>

:root{
  --dot-size: 0.151em;  
  --line-color: #333;       
  --line-contrast: 123%;    
  --photo-brightness: 88%;  
  --photo-contrast: 171%;   
  --photo-blur: 0.234px;        
  --blend-mode: hard-light; 

  --make-color: saturate(100%) invert(7%) sepia(100%) saturate(4848%) hue-rotate(222deg) brightness(95%) contrast(171%);
}

.canvas {
  /*position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;*/
  filter: contrast(var(--line-contrast));
  overflow: hidden;
}

.canvas .over {
  /*backdrop-filter: var(--make-color);*/
}

.canvas::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  bottom: -50%;
  right: -50%;
  background: radial-gradient(circle at center, var(--line-color), #fff);
  background-size: var(--dot-size) var(--dot-size);
  transform: rotate(20deg);
}

.canvas .img {
  /*position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;*/
  object-fit: cover;
  object-position: center;
  mix-blend-mode: var(--blend-mode);
  filter: grayscale(1) brightness(var(--photo-brightness)) contrast(var(--photo-contrast)) blur(var(--photo-blur)) var(--make-color);
}
</style>